<?php

/*
 * This file is part of the ACME PHP library.
 *
 * (c) Titouan Galopin <galopintitouan@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace AcmePhp\Bundle\Event;

/**
 * Contains all events thrown in the AcmePhp bundle.
 *
 * @author Jérémy Derussé <jeremy@derusse.com>
 */
final class AcmePhpBundleEvents
{
    /**
     * The CERTIFICATE_REQUESTED event occurs when a certificate is requested.
     *
     * This event allows you to deal with the generated certificate.
     * The event listener method receives a AcmePhp\Bundle\Event\CertificateEvent instance.
     *
     * @var string
     */
    const CERTIFICATE_REQUESTED = 'acme_php.certificate.requested';

    /**
     * The CHALLENGE_REQUESTED event occurs when a acme challenge is requested.
     *
     * This event allows you to deal with the challenge generated by the Acme Certificate Authority.
     * The event listener method receives a AcmePhp\Bundle\Event\ChallengeEvent instance.
     *
     * @var string
     */
    const CHALLENGE_REQUESTED = 'acme_php.challenge.requested';

    /**
     * The CHALLENGE_CHECKED event occurs after a acme challenge is checked. Whether or not it has been accepted.
     *
     * This event allows you to deal with the challenge previously generated to perform cleanup for instance.
     * The event listener method receives a AcmePhp\Bundle\Event\ChallengeEvent instance.
     *
     * @var string
     */
    const CHALLENGE_CHECKED = 'acme_php.challenge.checked';

    /**
     * The CHALLENGE_ACCEPTED event occurs when the acme challenge has been accepted by the Certificate Authority.
     *
     * The event listener method receives a AcmePhp\Bundle\Event\ChallengeEvent instance.
     *
     * @var string
     */
    const CHALLENGE_ACCEPTED = 'acme_php.challenge.accepted';

    /**
     * The CHALLENGE_REJECTED event occurs when the acme challenge has been rejected by the Certificate Authority.
     *
     * The event listener method receives a AcmePhp\Bundle\Event\ChallengeEvent instance.
     *
     * @var string
     */
    const CHALLENGE_REJECTED = 'acme_php.challenge.rejected';
}
